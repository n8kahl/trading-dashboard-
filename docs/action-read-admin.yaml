openapi: 3.1.0
info:
  title: Trading Assistant â€“ Read Admin API
  version: 1.0.0
servers:
  - url: https://tradingassistantmcpready-production.up.railway.app
paths:
  /api/v1/admin/signals:
    get:
      operationId: adminSignalsList
      parameters:
        - in: header
          name: X-Assistant-Profile
          schema: { type: string, enum: [coach, trade] }
        - in: query
          name: symbol
          schema: { type: string }
        - in: query
          name: since
          schema: { type: string, format: date-time }
        - in: query
          name: limit
          schema: { type: integer, default: 50, minimum: 1, maximum: 200 }
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok: { type: boolean }
                  profile: { type: string }
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id: { type: string }
                        symbol: { type: string }
                        time: { type: string }
                        strategy: { type: string }
                        gates: { type: object, additionalProperties: { type: boolean } }
                        pr_win: { type: number }
                        expected_r: { type: number }
                        actionability: { type: string, enum: [actionable, wait, skip] }
  /api/v1/admin/signal/{sid}:
    get:
      operationId: adminSignalGet
      parameters:
        - in: header
          name: X-Assistant-Profile
          schema: { type: string, enum: [coach, trade] }
        - in: path
          name: sid
          required: true
          schema: { type: string }
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok: { type: boolean }
                  profile: { type: string }
                  signal:
                    type: object
                    properties:
                      id: { type: string }
                      symbol: { type: string }
                      time: { type: string }
                      features: { type: object, additionalProperties: true }
                      gates: { type: object, additionalProperties: { type: boolean } }
                      pr_win: { type: number }
                      expected_r: { type: number }
                      actionability: { type: string, enum: [actionable, wait, skip] }
                      plan:
                        type: object
                        properties:
                          entry: { type: number }
                          stop: { type: number }
                          tp1_r: { type: number }
                          tp2_r: { type: number }
                          time_stop_min: { type: integer }
  /api/v1/admin/positions:
    get:
      operationId: adminPositions
      parameters:
        - in: header
          name: X-Assistant-Profile
          schema: { type: string, enum: [coach, trade] }
        - in: query
          name: limit
          schema: { type: integer, default: 20 }
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok: { type: boolean }
                  profile: { type: string }
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id: { type: string }
                        symbol: { type: string }
                        side: { type: string }
                        avg_price: { type: number }
                        qty: { type: number }
                        unrealized_r: { type: number }
                        timer_sec: { type: integer }
                        risk_state: { type: string }
  /api/v1/admin/diag/calibration:
    get:
      operationId: adminDiagCalibration
      parameters:
        - in: header
          name: X-Assistant-Profile
          schema: { type: string, enum: [coach, trade] }
        - in: query
          name: strategy
          schema: { type: string }
        - in: query
          name: period
          schema: { type: string, default: "30d" }
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok: { type: boolean }
                  profile: { type: string }
                  strategy: { type: string }
                  period: { type: string }
                  bins:
                    type: array
                    items:
                      type: object
                      properties:
                        decile: { type: integer }
                        pr_pred: { type: number }
                        pr_real: { type: number }
  /api/v1/admin/diag/expectancy-heatmap:
    get:
      operationId: adminDiagHeatmap
      parameters:
        - in: header
          name: X-Assistant-Profile
          schema: { type: string, enum: [coach, trade] }
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok: { type: boolean }
                  profile: { type: string }
                  grid:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
  /api/v1/admin/intents:
    get:
      operationId: adminIntentsList
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok: { type: boolean }
                  items:
                    type: array
                    items: { type: object, additionalProperties: true }
    post:
      operationId: adminIntentCreate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type: { type: string }
                signal_id: { type: string }
                payload: { type: object, additionalProperties: true }
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok: { type: boolean }
                  intent: { type: object, additionalProperties: true }
